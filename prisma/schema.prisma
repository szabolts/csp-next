// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  email       String     @unique
  password    String
  name        String
  createdAt   DateTime   @default(now())
  warehouseId String?    @db.ObjectId
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])

  @@map("users")
}

model Warehouse {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  name          String             @unique
  stock         Stock[]
  cuttingParams CuttingParams
  optSettings   OptSettings
  orders        Order[]
  waste         Waste[]
  inviteCode    String?
  users         User[]
}

model Stock {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  type        String // Cső típusa
  length      Int[] // Cső hossza méterben
  quantity    Int[] // Darabszám
  cost        Int // Ár
  warehouseId String    @db.ObjectId
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
}

type CuttingParams {
  cuttingCost Int 
  kerfWidth   Int
  wasteTreshold Int
}

type OptSettings {
  numberOfStocks Int
  lengthOfStocks Int
  cuts           Int
  waste          Int
}

model Order {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  ordered     Int // Megrendelt mennyiség
  cut         Int // Kivágott mennyiség
  delivered   Int // Kiszállított mennyiség
  warehouseId String    @db.ObjectId
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
}

model Waste {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  type        String // Szemét típusa
  quantity    Int // Mennyiség
  warehouseId String    @db.ObjectId
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
}
